name: CI

env:
  project: 'release-go'

on: [push, pull_request]

jobs:

  test:
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]

        # include:
        #   - go-version: [1.15.x]
        #     os: [ubuntu-latest]
        #   - go-version: [1.15.x]
        #     os: [macos-latest]
        #   - go-version: [1.15.x]
        #     os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:

    - name: Install
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      run: go build ./...

    - name: Test
      run: go test ./...

    - name: Upload
      # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.project }}_${{ matrix.os }}_${{ matrix.go-version }}
        path: |
          ${{ env.project }}
          ${{ env.project }}.exe

  release:
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [test]
    # outputs:
    #   upload_url: ${{ steps.release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:

      - name: Download
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          name: latest
          tag_name: latest
          files: |
            artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release Create
      #   id: create
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Release Assets
      #   id: assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip